<?xml version="1.0"?>
<project name="cdm" default="makeJar" basedir=".">
  <property name="release.version" value="2.2.17"/>
  <property name="release.version.minor" value="${release.version}.00"/>
  <property name="build.debug" value="on"/>
  <property name="build.release" value="false"/>

  <!-- load env -->
  <property environment="env"/>
  <property file="${user.home}/build.properties"/>

  <property name="root.dir" location="${basedir}"/>
  <property name="src.dir" location="${root.dir}/src/main/java"/>
  <property name="doc.dir" location="${root.dir}/doc"/>
  <property name="lib.dir" location="${root.dir}/../lib"/>
  <property name="resources.dir" location="${root.dir}/src/main/resources"/>

  <property name="build.dir" location="${root.dir}/target/build"/>
  <property name="build.classes.dir" location="${build.dir}/classes"/>
  <property name="build.javadoc.dir" location="${build.dir}/javadoc"/>
  <property name="dist.dir" location="${root.dir}/target/dist"/>
  <property name="javadoc.dir" location="${dist.dir}/javadoc"/>
  <property name="javadocAll.dir" location="${dist.dir}/javadocAll"/>

  <property name="release.library.dir" value="O:/pub/netcdf-java/v${release.version}/"/>
  <property name="release.doc.dir" value="O:/pub/netcdf-java/v${release.version}/"/>
  <property name="release.html.dir" value="Z:/content/software/netcdf-java/v${release.version}/"/>
  <property name="release.javadoc.dir" value="Z:/content/software/netcdf-java/v${release.version}/javadoc/"/>
  <property name="release.javadocAll.dir" value="Z:/content/software/netcdf-java/v${release.version}/javadocAll/"/>
  <property name="webstart_dir" location="Z:/content/software/netcdf-java/v2.2/webstart"/>

  <property name="test.src.dir" location="${root.dir}/test/src"/>
  <property name="test.dir" location="${root.dir}/build/test"/>

  <!-- property name="bzip2.jar" value="bzip2.jar"/ -->
  <!-- property name="dods.jar" value="dods-1.1.7c.jar"/ -->
  <property name="gnu-regexp.jar" value="gnu-regexp-1.1.4.jar"/>
  <property name="bufr.jar" value="bufr.jar"/>
  <property name="grib.jar" value="grib.jar"/>
  <property name="httpclient.jar" value="commons-httpclient-3.0.jar"/>
  <property name="http-logging.jar" value="commons-logging-1.0.4.jar"/>
  <property name="http-codec.jar" value="commons-codec-1.3.jar"/>
  <property name="jdom.jar" value="jdom.jar"/>
  <property name="jpeg2000.jar" value="jpeg2000.jar"/>
  <property name="junit.jar" value="junit.jar"/>
  <property name="logging.jar" value="nlog4j-1.2.21.jar"/>
  <property name="logging-minimal.jar" value="slf4j-jdk14.jar"/>
  <property name="lucene.jar" value="lucene.jar"/>
  <property name="netcdf1.jar" value="netcdf1.jar"/>
  <property name="prefs.jar" value="prefsAll.jar"/>
  <property name="resourcesOptional.jar" value="resourcesOptional.jar"/>
  <property name="visad.jar" value="visad.jar"/>
  <property name="visadNoDods.jar" value="visadNoDods.jar"/>
  <property name="xml-apis.jar" value="xml-apis.jar"/>
  <property name="xercesImpl.jar" value="xercesImpl.jar"/>

  <!-- source -->
  <path id="sourcepath">
    <pathelement location="${src.dir}"/>
  </path>

  <patternset id="sources">
    <include name="ucar/**/*.java"/>
    <include name="thredds/**/*.java"/>
  </patternset>

  <!-- Libraries -->
  <fileset id="compile.libraries" dir="${lib.dir}">
    <include name="release/${bufr.jar}"/>
    <include name="release/${grib.jar}"/>
    <include name="release/${visadNoDods.jar}"/>
    <include name="external/${jdom.jar}"/>
    <include name="external/${httpclient.jar}"/>
    <include name="external/${logging-minimal.jar}"/>
  </fileset>

  <path id="compile.classpath">
    <fileset refid="compile.libraries"/>
  </path>

  <fileset id="runtime.libraries" dir="${lib.dir}">
    <include name="external/${gnu-regexp.jar}"/>
    <include name="external/${http-codec.jar}"/>
    <include name="external/${http-logging.jar}"/>
    <include name="external/${jpeg2000.jar}"/>
    <include name="external/${xercesImpl.jar}"/>
    <include name="external/${xml-apis.jar}"/>
  </fileset>

  <path id="runtime.classpath">
    <fileset refid="compile.libraries"/>
    <fileset refid="runtime.libraries"/>
  </path>


  <!-- LOOK can we generate with pathconvert? -->
  <property name="Class-Path"
            value="${bufr.jar} ${grib.jar} ${visadNoDods.jar} ${jdom.jar} ${httpclient.jar} ${http-logging.jar} ${gnu-regexp.jar} ${http-codec.jar} ${http-logging.jar} ${jpeg2000.jar} ${prefs.jar} ${resourcesOptional.jar}"/>
  <property name="ClassPath-CommandLine"
            value="lib/${gnu-regexp.jar};lib/${bufr.jar};lib/${grib.jar};lib/${jdom.jar};lib/${httpclient.jar};lib/${http-codec.jar};lib/${http-logging.jar};lib/${jpeg2000.jar};lib/${logging.jar};lib/${prefs.jar};lib/${resourcesOptional.jar};lib/${visadNoDods.jar}"/>

  <target name="test">
    <echo>Class-Path=${Class-Path}</echo>

    <pathconvert property="runtime.classpath.prop" refid="runtime.classpath" pathsep=" ">
      <mapper type="flatten"/>
    </pathconvert>
    <echo>runtime.classpath.prop=${runtime.classpath.prop}</echo>
  </target>

  <!-- targets -->
  <target name="init">
    <mkdir dir="${build.classes.dir}"/>
    <mkdir dir="${dist.dir}"/>
    <echo message="Initialize ${ant.project.name}"/>
  </target>

  <target name="clean" description="Deletes all files that are generated by the build.">
    <delete dir="${build.dir}" failonerror="false"/>
    <delete dir="${dist.dir}" failonerror="false"/>
  </target>

  <target name="release-settings">
    <condition property="build.debuglevel" value="lines">
      <istrue value="${build.release}"/>
    </condition>
    <property name="build.debuglevel" value="lines,vars,source"/>
    <!-- echo>release.build=${release.build}</echo>
       <echo>build.debuglevel=${build.debuglevel}</echo -->
  </target>

  <target name="compile" depends="init, release-settings" description="library compile">
    <javac destdir="${build.classes.dir}" debug="${build.debug}" debuglevel="${build.debuglevel}"
           includeAntRuntime="false" source="1.4" target="1.4">
      <src refid="sourcepath" />

      <patternset>
        <include name="ucar/**/*.java"/>
        <include name="thredds/catalog/parser/jdom/*.java"/>
        <include name="thredds/catalog/crawl/*.java"/>
      </patternset>

      <classpath refid="compile.classpath"/>

    </javac>
  </target>

  <!-- make library jars -->
  <property name="jarMinimal" value="ncCore-${release.version}.jar"/>
  <property name="jarMain" value="netcdf-${release.version}.jar"/>
  <target name="makeJar" depends="compile" description="make library jars">
    <tstamp>
      <format property="buildtime" pattern="yyyy-MM-dd HH:mm:ss"/>
    </tstamp>
    <copy file="README.TEMPLATE" tofile="${build.dir}/README" overwrite="true">
      <filterset>
        <filter token="BUILDTIME" value="${buildtime}"/>
        <filter token="VERSION" value="${release.version}"/>
        <filter token="VERSION.MINOR" value="${release.version.minor}"/>
      </filterset>
    </copy>

    <copy file="CHANGES.txt" tofile="${build.dir}/CHANGES" overwrite="true">
      <filterset>
        <filter token="BUILDTIME" value="${buildtime}"/>
        <filter token="VERSION" value="${release.version}"/>
        <filter token="VERSION.MINOR" value="${release.version.minor}"/>
      </filterset>
    </copy>

    <jar jarfile="${dist.dir}/${jarMinimal}" index="true">
      <fileset dir="${build.classes.dir}">
        <include name="ucar/ma2/*"/>
        <include name="ucar/nc2/*"/>
        <include name="ucar/nc2/util/NetcdfFileCache.class"/>
        <include name="ucar/unidata/io/*"/>
        <include name="ucar/unidata/io/http/*"/>
        <include name="ucar/unidata/util/StringUtil.class"/>
      </fileset>
      <fileset dir="${build.dir}" includes="README"/>
      <fileset dir="${build.dir}" includes="CHANGES"/>
      <!--fileset dir="${lib.dir}/slf4j" /-->

      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Built-On" value="${buildtime}"/>
        <attribute name="Implementation-Title" value="NetCDF-Java-MinimalLibrary"/>
        <attribute name="Implementation-Version" value="${release.version.minor}"/>
        <attribute name="Implementation-Vendor" value="UCAR/Unidata"/>
      </manifest>

    </jar>

    <jar jarfile="${dist.dir}/${jarMain}" index="true">
      <fileset dir="${build.classes.dir}"/>
      <fileset dir="${build.dir}" includes="README"/>
      <fileset dir="${build.dir}" includes="CHANGES"/>

      <fileset dir="${resources.dir}">
        <include name="resources/**/*"/>
      </fileset>

      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Built-On" value="${buildtime}"/>
        <attribute name="Implementation-Title" value="NetCDF-Java-Library"/>
        <attribute name="Implementation-Version" value="${release.version.minor}"/>
        <attribute name="Implementation-Vendor" value="UCAR/Unidata"/>
      </manifest>

    </jar>

  </target>

  <property name="idv.jar" value="nc2.2.jar"/>
  <property name="zip.dir" location="${dist.dir}/zip"/>
  <property name="uiZip.dir" location="${dist.dir}/uiZip"/>
  <property name="idv.dir" location="${dist.dir}/idv"/>
  <target name="makeIDVjar" depends="makeJar" description="create netcdfAll zip file">
    <!--unzip so we can make idv jar -->
    <mkdir dir="${idv.dir}"/>
    <unzip dest="${idv.dir}">
      <fileset dir="${lib.dir}">
        <include name="release/${bufr.jar}"/>
        <include name="release/${grib.jar}"/>
        <include name="external/${jdom.jar}"/>
        <include name="external/${jpeg2000.jar}"/>
        <include name="external/${httpclient.jar}"/>
        <include name="external/${http-codec.jar}"/>
        <include name="external/${http-logging.jar}"/>
        <include name="external/${logging-minimal.jar}"/>
      </fileset>
    </unzip>
    <unzip dest="${idv.dir}">
      <fileset dir="${dist.dir}">
        <include name="${jarMain}"/>
      </fileset>
    </unzip>

    <jar jarfile="${dist.dir}/${idv.jar}" index="true" duplicate="preserve">
      <fileset dir="${build.dir}" includes="README"/>
      <fileset dir="${build.dir}" includes="CHANGES"/>
      <fileset dir="${idv.dir}"/>

      <manifest>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Built-On" value="${buildtime}"/>
        <attribute name="Implementation-Title" value="NetCDF-Java-IDV-library"/>
        <attribute name="Implementation-Version" value="${release.version.minor}"/>
        <attribute name="Implementation-Vendor" value="UCAR/Unidata"/>
      </manifest>
    </jar>
  </target>

  <!-- source release -->
  <property name="srcRelease" value="ncSrc-${release.version}.zip"/>
  <property name="srcZip.dir" location="${dist.dir}/srcZip"/>
  <target name="makeSrc" description="create source release">
    <copy todir="${srcZip.dir}" overwrite="true" preservelastmodified="true">
      <fileset file="${build.dir}/README"/>
      <fileset file="${build.dir}/CHANGES"/>

      <fileset dir="${root.dir}">
        <include name="build.xml"/>
        <include name="runSrcRelease"/>
        <include name="resources/resources/**"/>
        <include name="threddsResources/resources/**"/>
      </fileset>
    </copy>

    <copy file="${root.dir}/runSrcRelease" tofile="${srcZip.dir}/runSrcRelease" overwrite="true">
      <filterset>
        <filter token="CLASSPATH" value="${ClassPath-CommandLine}"/>
      </filterset>
    </copy>

    <copy todir="${srcZip.dir}/src" overwrite="true" preservelastmodified="true">
      <fileset dir="${src.dir}">
        <include name="**/*.java"/>
      </fileset>
      <fileset dir="${srcUI.dir}">
        <include name="**/*.java"/>
      </fileset>
    </copy>

    <copy todir="${srcZip.dir}/lib" overwrite="true" preservelastmodified="true" flatten="true">
      <fileset refid="compile.libraries"/>
      <fileset refid="compileUI.libraries"/>
      <fileset refid="runtime.libraries"/>
      <fileset file="${lib.dir}/release/${resourcesOptional.jar}"/>
    </copy>

    <zip destfile="${dist.dir}/${srcRelease}" basedir="${srcZip.dir}">
       <zipfileset dir="${resources.dir}/resources" prefix="resources/resources"/>
       <zipfileset dir="${resourcesUI.dir}/resources" prefix="resources/resources"/>
    </zip>

  </target>

  <!-- get rid of dods stuff in visad.jar -->
  <property name="visadNoDods.tempdir" location="C:/TEMP/visad/"/>
  <target name="makeVisad" description="remove dods from visad">
    <delete dir="${visadNoDods.tempdir}" failonerror="false"/>
    <mkdir dir="${visadNoDods.tempdir}"/>
    <unzip dest="${visadNoDods.tempdir}">
      <fileset file="${lib.dir}/${visad.jar}"/>
    </unzip>

    <delete dir="${visadNoDods.tempdir}/dods" failonerror="true"/>
    <delete dir="${visadNoDods.tempdir}/gnu/regexp" failonerror="true"/>

    <jar jarfile="${lib.dir}/${visadNoDods.jar}" index="true" duplicate="preserve">
      <fileset dir="${visadNoDods.tempdir}"/>
    </jar>
  </target>


  <!-- make javadoc -->
  <target name="javadoc" description="make the javadocs">
    <mkdir dir="${javadoc.dir}"/>
    <javadoc Doctitle="NetCDF-Java 2.2 API" Use="true" Windowtitle="NetCDF-Java 2.2 API"
             maxmemory="256m" sourcepathref="sourcepath" destdir="${javadoc.dir}" public="true" source="1.4">
      <classpath refid="compile.classpath"/>

      <package name="thredds.catalog"/>
      <!--package name="thredds.catalog.query"/ -->
      <package name="ucar.ma2"/>
      <package name="ucar.nc2"/>
      <package name="ucar.nc2.dataset"/>
      <!--package name="ucar.nc2.dataset.conv"/ -->
      <package name="ucar.nc2.dataset.grid"/>
      <!-- package name="ucar.nc2.geotiff"/ -->
      <!--package name="ucar.nc2.dt"/ -->
      <!-- package name="ucar.nc2.dt.grid"/ -->
      <!-- package name="ucar.nc2.dt.image"/ -->
      <!-- package name="ucar.nc2.dt.radial"/-->
      <!-- package name="ucar.nc2.dt.point"/-->
      <!--package name="ucar.nc2.dt.trajectory"/ -->
      <!-- package name="ucar.nc2.ncml"/ -->
      <package name="ucar.nc2.thredds"/>
      <package name="ucar.nc2.units"/>
      <package name="ucar.nc2.util"/>
      <package name="ucar.unidata.geoloc"/>
      <package name="ucar.unidata.geoloc.projection"/>
      <package name="ucar.unidata.geoloc.vertical"/>
      <package name="ucar.unidata.io"/>
      <package name="ucar.unidata.util"/>
    </javadoc>
  </target>


  <target name="javadocAll" description="make all javadocs">
    <mkdir dir="${javadocAll.dir}"/>
    <javadoc Doctitle="NetCDF-Java 2.2 API" Use="true" Windowtitle="NetCDF-Java 2.2 API"
             maxmemory="256m" sourcepathref="sourcepath" destdir="${javadocAll.dir}" protected="true" source="1.4">
      <classpath refid="compile.classpath"/>
      <package name="dods.dap.*"/>
      <package name="thredds.catalog.*"/>
      <package name="ucar.ma2"/>
      <package name="ucar.nc2"/>
      <package name="ucar.nc2.*"/>
      <package name="ucar.unidata.*"/>
    </javadoc>
  </target>

  <!-- release user manual -->
  <target name="releaseDoc" description="Release user manual">
    <copy todir="${release.doc.dir}" overwrite="true">
      <fileset dir="${doc.dir}" includes="NetcdfJavaUserManual-2.2.doc"/>
      <fileset dir="${doc.dir}" includes="NetcdfJavaUserManual-2.2.pdf"/>
    </copy>
    <copy todir="${release.html.dir}" overwrite="true">
      <fileset dir="${doc.dir}" includes="NetcdfJavaUserManual-2.2.htm"/>
    </copy>
  </target>

  <!-- $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  -->
  <!-- UI -->
  <property name="srcUI.dir" location="${root.dir}/../ui/src/main/java"/>
  <property name="resourcesUI.dir" location="${root.dir}/../ui/src/main/resources"/>

  <fileset id="compileUI.libraries" dir="${lib.dir}">
    <include name="release/${prefs.jar}"/>
    <include name="external/${logging.jar}"/>
    <include name="external/${lucene.jar}"/>
  </fileset>

  <path id="compileUI.classpath">
    <fileset refid="compileUI.libraries"/>
  </path>

  <path id="sourcepathUI">
    <pathelement location="${src.dir}"/>
    <pathelement location="${srcUI.dir}"/>
  </path>

  <target name="compileUI" depends="init, release-settings" description="toolsUI compile">
    <pathconvert property="sourcepath.prop" refid="sourcepath" targetos="windows"/>
    <echo>sourcepath=${sourcepath.prop}</echo>

    <javac destdir="${build.classes.dir}" debug="${build.debug}" debuglevel="${build.debuglevel}" includeAntRuntime="false" source="1.4" target="1.4">
      <src refid="sourcepathUI"/>

      <patternset refid="sources"/>
      <patternset>
        <include name="ucar/nc2/ui/*.java"/>
      </patternset>

      <classpath refid="compile.classpath"/>
      <classpath refid="compileUI.classpath"/>
    </javac>

  </target>

   <property name="jarUI" value="netcdfUI-${release.version}.jar"/>
   <target name="makeJarUI" depends="compile, compileUI" description="make toolsUI jar">
     <tstamp>
       <format property="buildtime" pattern="yyyy-MM-dd HH:mm:ss"/>
     </tstamp>
     <copy file="README.TEMPLATE" tofile="${build.dir}/README" overwrite="true">
       <filterset>
         <filter token="BUILDTIME" value="${buildtime}"/>
         <filter token="VERSION" value="${release.version}"/>
         <filter token="VERSION.MINOR" value="${release.version.minor}"/>
       </filterset>
     </copy>

     <copy file="CHANGES.txt" tofile="${build.dir}/CHANGES" overwrite="true">
       <filterset>
         <filter token="BUILDTIME" value="${buildtime}"/>
         <filter token="VERSION" value="${release.version}"/>
         <filter token="VERSION.MINOR" value="${release.version.minor}"/>
       </filterset>
     </copy>

     <jar jarfile="${dist.dir}/${jarUI}" index="true" duplicate="preserve">
       <fileset dir="${build.dir}" includes="README"/>
       <fileset dir="${build.dir}" includes="CHANGES"/>
       <fileset dir="${build.classes.dir}" />
       <zipfileset dir="${resources.dir}/resources" prefix="resources"/>
       <zipfileset dir="${resourcesUI.dir}/resources" prefix="resources"/>

       <manifest>
         <attribute name="Main-Class" value="ucar.nc2.ui.ToolsUI"/>
         <attribute name="Class-Path" value="${Class-Path}"/>
         <attribute name="Built-By" value="${user.name}"/>
         <attribute name="Built-On" value="${buildtime}"/>
         <attribute name="Implementation-Title" value="NetCDF-Java-UITools"/>
         <attribute name="Implementation-Version" value="${release.version.minor}"/>
         <attribute name="Implementation-Vendor" value="UCAR/Unidata"/>
       </manifest>

       <indexjars>
         <path refid="compile.classpath"/>
         <path refid="compileUI.classpath"/>
         <pathelement location="${lib.dir}/release/${resourcesOptional.jar}"/>
       </indexjars>

     </jar>

   </target>

  <property name="toolsUI" value="toolsUI-${release.version}.jar"/>
  <property name="ncAll" value="netcdfAll-${release.version}.zip"/>
  <target name="makeAll" depends="makeJar, makeJarUI" description="create netcdfAll zip file">
    <copy file="${dist.dir}/${jarUI}" todir="${zip.dir}" overwrite="true" preservelastmodified="true"/>

    <!--gather jars for the application and make ncAll.zip -->
    <copy todir="${zip.dir}" flatten="true" overwrite="true" preservelastmodified="true">
      <fileset refid="compile.libraries"/>
      <fileset refid="compileUI.libraries"/>
      <fileset refid="runtime.libraries"/>
      <fileset file="${lib.dir}/release/${resourcesOptional.jar}"/>
    </copy>
    <zip destfile="${dist.dir}/${ncAll}"  basedir="${zip.dir}" />

    <!--unzip all so we can make uiAll -->
    <mkdir dir="${uiZip.dir}"/>
    <unzip dest="${uiZip.dir}">
      <fileset dir="${zip.dir}">
        <include name="**/*.jar"/>
      </fileset>
    </unzip>

    <jar jarfile="${dist.dir}/${toolsUI}" index="true" duplicate="preserve">
      <fileset dir="${build.dir}" includes="README"/>
      <fileset dir="${build.dir}" includes="CHANGES"/>
      <fileset dir="${uiZip.dir}" />

      <manifest>
        <attribute name="Main-Class" value="ucar.nc2.ui.ToolsUI"/>
        <attribute name="Built-By" value="${user.name}"/>
        <attribute name="Built-On" value="${buildtime}"/>
        <attribute name="Implementation-Title" value="NetCDF-Java-UITools"/>
        <attribute name="Implementation-Version" value="${release.version.minor}"/>
        <attribute name="Implementation-Vendor" value="UCAR/Unidata"/>
      </manifest>
    </jar>

  </target>

   <target name="makeResourcesOptional" description="make resourcesOptional.jar">
     <tstamp>
       <format property="buildtime" pattern="yyyy-MM-dd HH:mm:ss"/>
     </tstamp>

     <jar jarfile="${lib.dir}/release/resourcesOptional.jar" index="true" duplicate="preserve">
       <zipfileset dir="${resources.dir}/optional" prefix="resources"/>

       <manifest>
         <attribute name="Built-By" value="${user.name}"/>
         <attribute name="Built-On" value="${buildtime}"/>
         <attribute name="Implementation-Title" value="NetCDF-Java Optional Resources"/>
         <attribute name="Implementation-Version" value="${release.version.minor}"/>
         <attribute name="Implementation-Vendor" value="UCAR/Unidata"/>
       </manifest>

     </jar>

   </target>

  <!-- $$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$$  -->
  <target name="dist" depends="makeAll, makeIDVjar, makeSrc, javadoc, javadocAll" description="create a full distribution"/>

  <!-- release library -->
  <target name="release" description="Release library and source jar files to release directory: do 'ant dist' first">
    <copy todir="${release.library.dir}" overwrite="true">
      <fileset dir="${dist.dir}" includes="${jarMinimal}"/>
      <fileset dir="${dist.dir}" includes="${jarMain}"/>
      <fileset dir="${dist.dir}" includes="${srcRelease}"/>
      <fileset dir="${dist.dir}" includes="${idv.jar}"/>
    </copy>
    <copy todir="${release.javadoc.dir}" overwrite="true">
      <fileset dir="${javadoc.dir}"/>
    </copy>
    <copy todir="${release.javadocAll.dir}" overwrite="true">
      <fileset dir="${javadocAll.dir}"/>
    </copy>
    <copy todir="${release.html.dir}" overwrite="true">
      <fileset file="${build.dir}/README"/>
      <fileset file="${build.dir}/CHANGES"/>
    </copy>
  </target>


</project>
