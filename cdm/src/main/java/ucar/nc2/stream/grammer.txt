file = {segment}
segment = head_segment | data_segment | index_segment

head_segment = MAGIC_HEAD, {head_subsection}
head_subsection = MAGIC_GROUP, groups | MAGIC_DIM, dims | MAGIC_ATT, atts | MAGIC_VAR, vars

groups = ngroups, {objId, parentGroupObjId, name}
dims = ndims, {dimId, parentGroupObjId, name, length, dflags}
atts = natts, {parentObjId, name, dtype, nvals, vals}
vars = nvars, {objId, parentGroupObjId, parentStructureObjId, name, dtype, vflags, ndim, {dimId}}

data_segment = MAGIC_DATA, objId, elemSize, section, vals
section = nranges, {origin, size}

index_segment = MAGIC_INDEX, nindices, {objId, elemSize, section, filePos}
filePos = VLEN8

ndims, length, dflags, natts, type, nchars, nvals, nvars, elemSize, nranges, origin, size = VLEN4
objId, parentGroupObjId, parentStructureObjId = VLEN4
vals = {BYTE} | {SHORT} | {INT} | {LONG} | {FLOAT} | {DOUBLE} | {STRING}

name, varname = STRING
dtype = TYPE_BYTE=1 | TYPE_SHORT=2 | TYPE_INT=3 | TYPE_FLOAT=4 | TYPE_DOUBLE=5 | TYPE_LONG=6 | TYPE_STRING=7 | TYPE_STRUCTURE=8
dflags = BIT0=private & BIT1=unlimited & BIT2=vlen 
vflags = BIT0=unsigned &

VLEN4 = variable length encoded 4-byte integer
VLEN8 = variable length encoded 8-byte integer
STRING = nchars, {UTF}


endian ??
strides ?