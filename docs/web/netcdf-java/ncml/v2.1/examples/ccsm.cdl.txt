netcdf ccsm {
dimensions:
	lat = 64 ;
	lon = 128 ;
	lev = 26 ;
	ilev = 27 ;
	time = UNLIMITED ; // (1 currently)
	tbnd = 2 ;
	chars = 8 ;
variables:
	double P0 ;
		P0:long_name = "reference pressure" ;
		P0:units = "Pa" ;
	double lat(lat) ;
		lat:long_name = "latitude" ;
		lat:units = "degrees_north" ;
	double lon(lon) ;
		lon:long_name = "longitude" ;
		lon:units = "degrees_east" ;
	double lev(lev) ;
		lev:long_name = "hybrid level at midpoints (1000*(A+B))" ;
		lev:units = "level" ;
		lev:positive = "down" ;
		lev:standard_name = "atmosphere_hybrid_sigma_pressure_coordinate" ;
		lev:formula_terms = "a: hyam b: hybm p0: P0 ps: PS" ;
	double ilev(ilev) ;
		ilev:long_name = "hybrid level at interfaces (1000*(A+B))" ;
		ilev:units = "level" ;
		ilev:positive = "down" ;
		ilev:standard_name = "atmosphere_hybrid_sigma_pressure_coordinate" ;
		ilev:formula_terms = "a: hyai b: hybi p0: P0 ps: PS" ;
	double time(time) ;
		time:long_name = "time" ;
		time:units = "days since 0350-01-01 00:00:00" ;
		time:calendar = "noleap" ;
		time:bounds = "time_bnds" ;
	double time_bnds(time, tbnd) ;
		time_bnds:long_name = "time interval endpoints" ;
	char date_written(time, chars) ;
	char time_written(time, chars) ;
	int ntrm ;
		ntrm:long_name = "spectral truncation parameter M" ;
	int ntrn ;
		ntrn:long_name = "spectral truncation parameter N" ;
	int ntrk ;
		ntrk:long_name = "spectral truncation parameter K" ;
	int ndbase ;
		ndbase:long_name = "base day" ;
	int nsbase ;
		nsbase:long_name = "seconds of base day" ;
	int nbdate ;
		nbdate:long_name = "base date (YYYYMMDD)" ;
	int nbsec ;
		nbsec:long_name = "seconds of base date" ;
	int mdt ;
		mdt:long_name = "timestep" ;
		mdt:units = "s" ;
	int nlon(lat) ;
		nlon:long_name = "number of longitudes" ;
	int wnummax(lat) ;
		wnummax:long_name = "cutoff Fourier wavenumber" ;
	double hyai(ilev) ;
		hyai:long_name = "hybrid A coefficient at layer interfaces" ;
	double hybi(ilev) ;
		hybi:long_name = "hybrid B coefficient at layer interfaces" ;
	double hyam(lev) ;
		hyam:long_name = "hybrid A coefficient at layer midpoints" ;
	double hybm(lev) ;
		hybm:long_name = "hybrid B coefficient at layer midpoints" ;
	double gw(lat) ;
		gw:long_name = "gauss weights" ;
	int ndcur(time) ;
		ndcur:long_name = "current day (from base day)" ;
	int nscur(time) ;
		nscur:long_name = "current seconds of current day" ;
	int date(time) ;
		date:long_name = "current date (YYYYMMDD)" ;
	int datesec(time) ;
		datesec:long_name = "current seconds of current date" ;
	int nsteph(time) ;
		nsteph:long_name = "current timestep" ;
	float CLDHGH(time, lat, lon) ;
		CLDHGH:long_name = "Vertically-integrated high cloud" ;
		CLDHGH:cell_method = "time: mean" ;
	float CLDLOW(time, lat, lon) ;
		CLDLOW:long_name = "Vertically-integrated low cloud" ;
		CLDLOW:cell_method = "time: mean" ;
	float CLDMED(time, lat, lon) ;
		CLDMED:long_name = "Vertically-integrated mid-level cloud" ;
		CLDMED:cell_method = "time: mean" ;
	float CLDST(time, lev, lat, lon) ;
		CLDST:long_name = "Stratus cloud fraction" ;
		CLDST:cell_method = "time: mean" ;
	float CLDTOT(time, lat, lon) ;
		CLDTOT:long_name = "Vertically-integrated total cloud" ;
		CLDTOT:cell_method = "time: mean" ;
	float CLOUD(time, lev, lat, lon) ;
		CLOUD:long_name = "Cloud fraction" ;
		CLOUD:cell_method = "time: mean" ;
	float CME(time, lev, lat, lon) ;
		CME:units = "kg/kg/s" ;
		CME:long_name = "Rate of cond-evap within the cloud" ;
		CME:cell_method = "time: mean" ;
	float CMFDQ(time, lev, lat, lon) ;
		CMFDQ:units = "kg/kg/s" ;
		CMFDQ:long_name = "Q tendency - moist convection" ;
		CMFDQ:cell_method = "time: mean" ;
	float CMFDT(time, lev, lat, lon) ;
		CMFDT:units = "K/s" ;
		CMFDT:long_name = "T tendency - moist convetion" ;
		CMFDT:cell_method = "time: mean" ;
	float CMFMC(time, ilev, lat, lon) ;
		CMFMC:units = "kg/m2/s" ;
		CMFMC:long_name = "Moist convection mass flux" ;
		CMFMC:cell_method = "time: mean" ;
	float CNVCLD(time, lat, lon) ;
		CNVCLD:long_name = "Total convective cloud amount" ;
		CNVCLD:cell_method = "time: mean" ;
	float CONCLD(time, lev, lat, lon) ;
		CONCLD:long_name = "Convective cloud cover" ;
		CONCLD:cell_method = "time: mean" ;
	float CPLPRCER(time, lat, lon) ;
		CPLPRCER:units = "kg/m2/s" ;
		CPLPRCER:long_name = "Error in precipitation sent to coupler" ;
		CPLPRCER:cell_method = "time: mean" ;
	float CPLRAINC(time, lat, lon) ;
		CPLRAINC:units = "kg/m2/s" ;
		CPLRAINC:long_name = "Convective rainfall sent to coupler" ;
		CPLRAINC:cell_method = "time: mean" ;
	float CPLRAINL(time, lat, lon) ;
		CPLRAINL:units = "kg/m2/s" ;
		CPLRAINL:long_name = "Large-scale rainfall sent to coupler" ;
		CPLRAINL:cell_method = "time: mean" ;
	float CPLSNOWC(time, lat, lon) ;
		CPLSNOWC:units = "kg/m2/s" ;
		CPLSNOWC:long_name = "Convective snowfall sent to coupler" ;
		CPLSNOWC:cell_method = "time: mean" ;
	float CPLSNOWL(time, lat, lon) ;
		CPLSNOWL:units = "kg/m2/s" ;
		CPLSNOWL:long_name = "Large-scale snowfall sent to coupler" ;
		CPLSNOWL:cell_method = "time: mean" ;
	float CWAT(time, lev, lat, lon) ;
		CWAT:units = "kg/kg" ;
		CWAT:long_name = "CWAT constituent tracer" ;
		CWAT:cell_method = "time: mean" ;
	float DCQ(time, lev, lat, lon) ;
		DCQ:units = "kg/kg/s" ;
		DCQ:long_name = "Convective adjustment of Q" ;
		DCQ:cell_method = "time: mean" ;
	float DTCOND(time, lev, lat, lon) ;
		DTCOND:units = "K/s" ;
		DTCOND:long_name = "T tendency - convective adjustment" ;
		DTCOND:cell_method = "time: mean" ;
	float DTH(time, lev, lat, lon) ;
		DTH:units = "K/s" ;
		DTH:long_name = "T horizontal diffusive heating" ;
		DTH:cell_method = "time: mean" ;
	float DTV(time, lev, lat, lon) ;
		DTV:units = "K/s" ;
		DTV:long_name = "T vertical diffusion" ;
		DTV:cell_method = "time: mean" ;
	float EVAPPCT(time, lat, lon) ;
		EVAPPCT:units = "%" ;
		EVAPPCT:long_name = "Percentage of zm evap rate" ;
		EVAPPCT:cell_method = "time: mean" ;
	float FICE(time, lev, lat, lon) ;
		FICE:long_name = "Fractional ice content within cloud" ;
		FICE:cell_method = "time: mean" ;
	float FLNS(time, lat, lon) ;
		FLNS:units = "W/m2" ;
		FLNS:long_name = "Net longwave flux at surface" ;
		FLNS:cell_method = "time: mean" ;
	float FLNSC(time, lat, lon) ;
		FLNSC:units = "W/m2" ;
		FLNSC:long_name = "Clearsky net longwave flux at surface" ;
		FLNSC:cell_method = "time: mean" ;
	float FLNT(time, lat, lon) ;
		FLNT:units = "W/m2" ;
		FLNT:long_name = "Net longwave flux at top" ;
		FLNT:cell_method = "time: mean" ;
	float FLNTC(time, lat, lon) ;
		FLNTC:units = "W/m2" ;
		FLNTC:long_name = "Clearsky net longwave flux at top" ;
		FLNTC:cell_method = "time: mean" ;
	float FLUT(time, lat, lon) ;
		FLUT:units = "W/m2" ;
		FLUT:long_name = "Upward LW flux at TOM" ;
		FLUT:cell_method = "time: mean" ;
	float FLUTC(time, lat, lon) ;
		FLUTC:units = "W/m2" ;
		FLUTC:long_name = "Upward Clearsky flux at TOM" ;
		FLUTC:cell_method = "time: mean" ;
	float FRACW(time, lev, lat, lon) ;
		FRACW:long_name = "relative  importance of rain accreting liquid" ;
		FRACW:cell_method = "time: mean" ;
	float FSACI(time, lev, lat, lon) ;
		FSACI:long_name = "relative  importance of snow accreting ice" ;
		FSACI:cell_method = "time: mean" ;
	float FSACW(time, lev, lat, lon) ;
		FSACW:long_name = "relative  importance of snow accreting liquid" ;
		FSACW:cell_method = "time: mean" ;
	float FSAUT(time, lev, lat, lon) ;
		FSAUT:long_name = "relative importance of ice autoconversion" ;
		FSAUT:cell_method = "time: mean" ;
	float FSDS(time, lat, lon) ;
		FSDS:units = "W/m2" ;
		FSDS:long_name = "Flux Shortwave Downwelling Surface" ;
		FSDS:cell_method = "time: mean" ;
	float FSNS(time, lat, lon) ;
		FSNS:units = "W/m2" ;
		FSNS:long_name = "Net solar flux at surface" ;
		FSNS:cell_method = "time: mean" ;
	float FSNSC(time, lat, lon) ;
		FSNSC:units = "W/m2" ;
		FSNSC:long_name = "Clearsky net solar flux at surface" ;
		FSNSC:cell_method = "time: mean" ;
	float FSNT(time, lat, lon) ;
		FSNT:units = "W/m2" ;
		FSNT:long_name = "Net solar flux at top" ;
		FSNT:cell_method = "time: mean" ;
	float FSNTC(time, lat, lon) ;
		FSNTC:units = "W/m2" ;
		FSNTC:long_name = "Clearsky net solar flux at top" ;
		FSNTC:cell_method = "time: mean" ;
	float FSNTOA(time, lat, lon) ;
		FSNTOA:units = "W/m2" ;
		FSNTOA:long_name = "Net solar flx at top of Atmos" ;
		FSNTOA:cell_method = "time: mean" ;
	float FSNTOAC(time, lat, lon) ;
		FSNTOAC:units = "W/m2" ;
		FSNTOAC:long_name = "Clear sky flx at top of Atmos" ;
		FSNTOAC:cell_method = "time: mean" ;
	float FWAUT(time, lev, lat, lon) ;
		FWAUT:long_name = "relative importance of liquid autoconversion" ;
		FWAUT:cell_method = "time: mean" ;
	float GCLDLWP(time, lev, lat, lon) ;
		GCLDLWP:units = "gram/m2" ;
		GCLDLWP:long_name = "grid-box cloud water path" ;
		GCLDLWP:cell_method = "time: mean" ;
	float ICEFRAC(time, lat, lon) ;
		ICEFRAC:long_name = "Fraction of sfc area covered by sea-ice" ;
		ICEFRAC:cell_method = "time: mean" ;
	float ICIMR(time, lev, lat, lon) ;
		ICIMR:units = "kg/kg" ;
		ICIMR:long_name = "Prognostic in-cloud ice mixing ratio" ;
		ICIMR:cell_method = "time: mean" ;
	float ICLDLWP(time, lev, lat, lon) ;
		ICLDLWP:units = "gram/m2" ;
		ICLDLWP:long_name = "in-cloud cloud water path" ;
		ICLDLWP:cell_method = "time: mean" ;
	float ICWMR(time, lev, lat, lon) ;
		ICWMR:units = "kg/kg" ;
		ICWMR:long_name = "Prognostic in-cloud water mixing ratio" ;
		ICWMR:cell_method = "time: mean" ;
	float LHFLX(time, lat, lon) ;
		LHFLX:units = "W/m2" ;
		LHFLX:long_name = "Surface latent heat flux" ;
		LHFLX:cell_method = "time: mean" ;
	float LWCF(time, lat, lon) ;
		LWCF:units = "W/m2" ;
		LWCF:long_name = "LW cloud forcing" ;
		LWCF:cell_method = "time: mean" ;
	float MQ(time, lev, lat, lon) ;
		MQ:units = "kg/m2" ;
		MQ:long_name = "Water vapor mass in layer" ;
		MQ:cell_method = "time: mean" ;
	float O3VMR(time, lev, lat, lon) ;
		O3VMR:long_name = "Ozone volume mixing ratio" ;
		O3VMR:cell_method = "time: mean" ;
	float OCNFRAC(time, lat, lon) ;
		OCNFRAC:long_name = "Fraction of sfc area covered by ocean" ;
		OCNFRAC:cell_method = "time: mean" ;
	float OMEGA(time, lev, lat, lon) ;
		OMEGA:units = "Pa/s" ;
		OMEGA:long_name = "Vertical velocity (pressure)" ;
		OMEGA:cell_method = "time: mean" ;
	float OMEGAT(time, lev, lat, lon) ;
		OMEGAT:units = "K Pa/s" ;
		OMEGAT:long_name = "Vertical heat flux" ;
		OMEGAT:cell_method = "time: mean" ;
	float OMEGAU(time, lev, lat, lon) ;
		OMEGAU:units = "K Pa/s" ;
		OMEGAU:long_name = "Vertical flux of zonal momentum" ;
		OMEGAU:cell_method = "time: mean" ;
	float ORO(time, lat, lon) ;
		ORO:long_name = "ocean (0), land (1), sea ice (2) flag" ;
	float PBLH(time, lat, lon) ;
		PBLH:units = "m" ;
		PBLH:long_name = "PBL height" ;
		PBLH:cell_method = "time: mean" ;
	float PHIS(time, lat, lon) ;
		PHIS:units = "m2/s2" ;
		PHIS:long_name = "surface geopotential" ;
	float PRECC(time, lat, lon) ;
		PRECC:units = "m/s" ;
		PRECC:long_name = "Convective precipitation rate" ;
		PRECC:cell_method = "time: mean" ;
	float PRECL(time, lat, lon) ;
		PRECL:units = "m/s" ;
		PRECL:long_name = "Large-scale (stable) precipitation rate" ;
		PRECL:cell_method = "time: mean" ;
	float PS(time, lat, lon) ;
		PS:units = "Pa" ;
		PS:long_name = "surface pressure" ;
		PS:cell_method = "time: mean" ;
	float PSL(time, lat, lon) ;
		PSL:units = "Pa" ;
		PSL:long_name = "Sea level pressure" ;
		PSL:cell_method = "time: mean" ;
	float Q(time, lev, lat, lon) ;
		Q:units = "kg/kg" ;
		Q:long_name = "Q constituent tracer" ;
		Q:cell_method = "time: mean" ;
	float QFLX(time, lat, lon) ;
		QFLX:units = "kg/m2/s" ;
		QFLX:long_name = "Surface water flux" ;
		QFLX:cell_method = "time: mean" ;
	float QPERT(time, lat, lon) ;
		QPERT:units = "kg/kg" ;
		QPERT:long_name = "Perturbation specific humidity (eddies in PBL)" ;
		QPERT:cell_method = "time: mean" ;
	float QRL(time, lev, lat, lon) ;
		QRL:units = "K/s" ;
		QRL:long_name = "Longwave heating rate" ;
		QRL:cell_method = "time: mean" ;
	float QRS(time, lev, lat, lon) ;
		QRS:units = "K/s" ;
		QRS:long_name = "Solar heating rate" ;
		QRS:cell_method = "time: mean" ;
	float REL(time, lev, lat, lon) ;
		REL:units = "um" ;
		REL:long_name = "Effective radius" ;
		REL:cell_method = "time: mean" ;
	float RELHUM(time, lev, lat, lon) ;
		RELHUM:long_name = "Relative humidity" ;
		RELHUM:cell_method = "time: mean" ;
	float SHFLX(time, lat, lon) ;
		SHFLX:units = "W/m2" ;
		SHFLX:long_name = "Surface sensible heat flux" ;
		SHFLX:cell_method = "time: mean" ;
	float SNOWH(time, lat, lon) ;
		SNOWH:units = "m" ;
		SNOWH:long_name = "Water equivalent snow depth" ;
		SNOWH:cell_method = "time: mean" ;
	float SOLIN(time, lat, lon) ;
		SOLIN:units = "W/m2" ;
		SOLIN:long_name = "Solar insolation" ;
		SOLIN:cell_method = "time: mean" ;
	float SRFRAD(time, lat, lon) ;
		SRFRAD:units = "W/m2" ;
		SRFRAD:long_name = "Net radiative flux at surface" ;
		SRFRAD:cell_method = "time: mean" ;
	float SWCF(time, lat, lon) ;
		SWCF:units = "W/m2" ;
		SWCF:long_name = "SW cloud forcing" ;
		SWCF:cell_method = "time: mean" ;
	float T(time, lev, lat, lon) ;
		T:units = "K" ;
		T:long_name = "temperature" ;
		T:cell_method = "time: mean" ;
	float TAUGWX(time, lat, lon) ;
		TAUGWX:units = "N/m2" ;
		TAUGWX:long_name = "Zonal gravity wave surface stress" ;
		TAUGWX:cell_method = "time: mean" ;
	float TAUGWY(time, lat, lon) ;
		TAUGWY:units = "N/m2" ;
		TAUGWY:long_name = "Meridional gravity wave surface stress" ;
		TAUGWY:cell_method = "time: mean" ;
	float TAUX(time, lat, lon) ;
		TAUX:units = "N/m2" ;
		TAUX:long_name = "zonal surface stress" ;
		TAUX:cell_method = "time: mean" ;
	float TAUY(time, lat, lon) ;
		TAUY:units = "N/m2" ;
		TAUY:long_name = "meridional surface stress" ;
		TAUY:cell_method = "time: mean" ;
	float TGCLDCWP(time, lat, lon) ;
		TGCLDCWP:units = "gram/m2" ;
		TGCLDCWP:long_name = "Total (vertically integrated) grid-box cloud water path (liquid and ice)" ;
		TGCLDCWP:cell_method = "time: mean" ;
	float TGCLDIWP(time, lat, lon) ;
		TGCLDIWP:units = "gram/m2" ;
		TGCLDIWP:long_name = "Total (vertically integrated) grid-box ice water path (ice only)" ;
		TGCLDIWP:cell_method = "time: mean" ;
	float TGCLDLWP(time, lat, lon) ;
		TGCLDLWP:units = "gram/m2" ;
		TGCLDLWP:long_name = "Total (vertically integrated) grid-box liquid water path (liquid only)" ;
		TGCLDLWP:cell_method = "time: mean" ;
	float TMQ(time, lat, lon) ;
		TMQ:units = "kg/m2" ;
		TMQ:long_name = "Total (vertically integrated) precipitatable water" ;
		TMQ:cell_method = "time: mean" ;
	float TPERT(time, lat, lon) ;
		TPERT:units = "K" ;
		TPERT:long_name = "Perturbation temperature (eddies in PBL)" ;
		TPERT:cell_method = "time: mean" ;
	float TREFHT(time, lat, lon) ;
		TREFHT:units = "K" ;
		TREFHT:long_name = "Reference height temperature" ;
		TREFHT:cell_method = "time: mean" ;
	float TREFMNAV(time, lat, lon) ;
		TREFMNAV:units = "K" ;
		TREFMNAV:long_name = "Average of TREFHT daily minimum" ;
		TREFMNAV:cell_method = "time: mean" ;
	float TREFMXAV(time, lat, lon) ;
		TREFMXAV:units = "K" ;
		TREFMXAV:long_name = "Average of TREFHT daily maximum" ;
		TREFMXAV:cell_method = "time: mean" ;
	float TS(time, lat, lon) ;
		TS:units = "K" ;
		TS:long_name = "Surface temperature" ;
		TS:cell_method = "time: mean" ;
	float TSMN(time, lat, lon) ;
		TSMN:units = "K" ;
		TSMN:long_name = "Minimum surface temperature over output period" ;
		TSMN:cell_method = "time: minimum" ;
	float TSMX(time, lat, lon) ;
		TSMX:units = "K" ;
		TSMX:long_name = "Maximum surface temperature over output period" ;
		TSMX:cell_method = "time: maximum" ;
	float TT(time, lev, lat, lon) ;
		TT:units = "K2" ;
		TT:long_name = "Eddy temperature variance" ;
		TT:cell_method = "time: mean" ;
	float U(time, lev, lat, lon) ;
		U:units = "m/s" ;
		U:long_name = "zonal wind" ;
		U:cell_method = "time: mean" ;
	float USTAR(time, lat, lon) ;
		USTAR:units = "m/s" ;
		USTAR:long_name = "Surface friction velocity" ;
		USTAR:cell_method = "time: mean" ;
	float UTGWORO(time, lev, lat, lon) ;
		UTGWORO:units = "m/s2" ;
		UTGWORO:long_name = "U tendency - orographic gravity wave drag" ;
		UTGWORO:cell_method = "time: mean" ;
	float UU(time, lev, lat, lon) ;
		UU:units = "m2/s2" ;
		UU:long_name = "Zonal velocity squared" ;
		UU:cell_method = "time: mean" ;
	float V(time, lev, lat, lon) ;
		V:units = "m/s" ;
		V:long_name = "meridional wind" ;
		V:cell_method = "time: mean" ;
	float VD01(time, lev, lat, lon) ;
		VD01:units = "kg/kg/s" ;
		VD01:long_name = "Vertical diffusion of Q" ;
		VD01:cell_method = "time: mean" ;
	float VQ(time, lev, lat, lon) ;
		VQ:units = "m/s" ;
		VQ:long_name = "Meridional water transport" ;
		VQ:cell_method = "time: mean" ;
	float VT(time, lev, lat, lon) ;
		VT:units = "K m/s" ;
		VT:long_name = "Meridional heat transport" ;
		VT:cell_method = "time: mean" ;
	float VTGWORO(time, lev, lat, lon) ;
		VTGWORO:units = "m/s2" ;
		VTGWORO:long_name = "V tendency - orographic gravity wave drag" ;
		VTGWORO:cell_method = "time: mean" ;
	float VU(time, lev, lat, lon) ;
		VU:units = "m2/s2" ;
		VU:long_name = "Meridional flux of zonal momentum" ;
		VU:cell_method = "time: mean" ;
	float VV(time, lev, lat, lon) ;
		VV:units = "m2/s2" ;
		VV:long_name = "Meridional velocity squared" ;
		VV:cell_method = "time: mean" ;
	float VZ(time, lev, lat, lon) ;
		VZ:units = "m3/s3" ;
		VZ:long_name = "Meridional transport" ;
		VZ:cell_method = "time: mean" ;
	float Z3(time, lev, lat, lon) ;
		Z3:units = "m" ;
		Z3:long_name = "Geopotential Height (above sea level)" ;
		Z3:cell_method = "time: mean" ;
	float ZMDQ(time, lev, lat, lon) ;
		ZMDQ:units = "kg/kg/s" ;
		ZMDQ:long_name = "Q tendency - zhang moist convection" ;
		ZMDQ:cell_method = "time: mean" ;
	float ZMDT(time, lev, lat, lon) ;
		ZMDT:units = "K/s" ;
		ZMDT:long_name = "T tendency - zhang moist convection" ;
		ZMDT:cell_method = "time: mean" ;
	float ZZ(time, lev, lat, lon) ;
		ZZ:units = "m2" ;
		ZZ:long_name = "Eddy height variance" ;
		ZZ:cell_method = "time: mean" ;

// global attributes:
		:Conventions = "CF-1.0" ;
		:source = "CAM" ;
		:case = "b20.007" ;
		:title = "b20.007 fully coupled T42_gx1v3 test" ;
		:logname = "" ;
		:host = "" ;
		:Version = "$Name: ccsm2_0_beta40 $" ;
		:revision_Id = "$Id: history.F90,v 1.26.2.10 2002/03/07 17:06:24 mirin Exp $" ;
}
